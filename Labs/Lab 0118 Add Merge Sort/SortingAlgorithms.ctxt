#BlueJ class context
comment0.target=SortingAlgorithms
comment0.text=\r\n\ Sorting\ Algorithms\r\n\r\n\ @author\ (Grace\ Jau)\r\n\ @version\ (0118)\r\n
comment1.params=
comment1.target=SortingAlgorithms()
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ SortingAlgorithms\r\n
comment10.params=
comment10.target=void\ printNums()
comment10.text=\r\n\ Prints\ the\ values\ of\ nums\ in\ rows\ of\ ten\r\n
comment11.params=
comment11.target=void\ main()
comment2.params=
comment2.target=void\ storeNums()
comment2.text=\r\n\ stores\ the\ unsorted\ nums\ so\ that\ it\ can\ be\ referred\ to\ later\r\n
comment3.params=
comment3.target=void\ unsortNums()
comment3.text=\r\n\ unsorts\ nums\ so\ that\ it\ is\ exactly\ the\ same\ as\ it\ was\ before\ it\ was\ sorted;\ this\ allows\ the\ sorting\ methods\ to\ be\ comparable\ because\ they\ unsort\ the\ exact\ same\ array\ of\ numbers\r\n
comment4.params=
comment4.target=void\ bubbleSort()
comment4.text=\r\n\ implements\ the\ bubble\ sort\ algorithm\r\n
comment5.params=
comment5.target=void\ selectSort()
comment5.text=\r\n\ implements\ the\ select\ sort\ algorithm\r\n
comment6.params=
comment6.target=void\ insertionSort()
comment6.text=\r\n\ implements\ the\ insertion\ sort\ algorithm\r\n
comment7.params=a\ n
comment7.target=void\ mergeSort(int[],\ int)
comment7.text=\r\n\ implements\ the\ merge\ sort\ algorithm\r\n
comment8.params=a\ l\ r\ left\ right
comment8.target=void\ merge(int[],\ int[],\ int[],\ int,\ int)
comment8.text=\r\n\ implements\ the\ merge\ sort\ algorithm\r\n
comment9.params=min\ max
comment9.target=void\ fillNums(int,\ int)
comment9.text=\r\n\ Fills\ nums\ with\ integer\ values\ within\ the\ range\ provided\ (inclusive)\ until\ the\ array\ has\ the\ designated\ length\r\n
numComments=12
